What happens when you initialize a repository? Why do you need to do it?

1. git files are added to the folder
2. You need git files so you can interact with the folder using git commands.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

the working directory has a snapshot of all of the files. The staging area is a place where you put the files to get ready for a commit. The repository houses all of the commits.

How can you use the staging area to make sure you have one commit per logical
change?

you can always run git diff (—-staged) to compare the most recent commit to the staging area.  

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

branches are helpful if you want to explore an experimental change to your repository without having to track the master branch.

How do the diagrams help you visualize the branch structure?

Diagrams help by showing that if and when you create a new branch and what commits are added to that branch.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The result of merging two branches together is that the two branches become one. We represent it the way we do because it’s easier to visualize.

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?
